{"version":3,"file":"as-umd-module.js","sources":["../node_modules/javascripttostring/src/javascripttostring.ts","../src/as-umd-module.ts"],"sourcesContent":["import getObjectType from \"get-internal-type\";\r\n\r\n/**\r\n * Converts to string the value, if it wasn't before\r\n * @param value the value, that converts to string\r\n * @param references the references to stringified objects\r\n */\r\nfunction stringify(value: any, references?: any[]): string {\r\n  let referenceValues: any[] = references || [value];\r\n  switch (getObjectType(value)) {\r\n    case \"undefined\":\r\n      return \"undefined\";\r\n    case \"null\":\r\n      return \"null\";\r\n    case \"boolean\":\r\n    case \"regexp\":\r\n      return String(value);\r\n    case \"string\":\r\n      return JSON.stringify(value);\r\n    case \"number\":\r\n      if (Number.isNaN(value)) {\r\n        return \"Number.NaN\";\r\n      }\r\n      switch (value) {\r\n        case Number.POSITIVE_INFINITY:\r\n          return \"Number.POSITIVE_INFINITY\";\r\n        case Number.NEGATIVE_INFINITY:\r\n          return \"Number.NEGATIVE_INFINITY\";\r\n        case Number.EPSILON:\r\n          return \"Number.EPSILON\";\r\n        case Number.MAX_SAFE_INTEGER:\r\n          return \"Number.MAX_SAFE_INTEGER\";\r\n        case Number.MIN_SAFE_INTEGER:\r\n          return \"Number.MIN_SAFE_INTEGER\";\r\n        case Number.MAX_VALUE:\r\n          return \"Number.MAX_VALUE\";\r\n        case Number.MIN_VALUE:\r\n          return \"Number.MIN_VALUE\";\r\n        default:\r\n          return String(value);\r\n      }\r\n    case \"bigint\":\r\n      return `BigInt(${value})`;\r\n    case \"symbol\":\r\n      switch (value) {\r\n        case Symbol.asyncIterator:\r\n        case Symbol.hasInstance:\r\n        case Symbol.isConcatSpreadable:\r\n        case Symbol.iterator:\r\n        case Symbol.match:\r\n        case Symbol.prototype:\r\n        case Symbol.replace:\r\n        case Symbol.search:\r\n        case Symbol.species:\r\n        case Symbol.split:\r\n        case Symbol.toPrimitive:\r\n        case Symbol.toStringTag:\r\n        case Symbol.unscopables:\r\n          return value.description;\r\n        default:\r\n          let description = value.description ? `\"${value.description}\"` : \"\";\r\n          return `Symbol(${description})`;\r\n      }\r\n    case \"date\":\r\n      if (isNaN(value.getTime())) {\r\n        return `new Date(${value.toString()})`;\r\n      }\r\n      return `new Date(${value.toISOString()})`;\r\n    case \"error\":\r\n      let message = JSON.stringify(value.message),\r\n        fileName = JSON.stringify(value.fileName),\r\n        lineNumber = JSON.stringify(value.lineNumber);\r\n      return `new Error(${message}, ${fileName}, ${lineNumber})`;\r\n    case \"array\":\r\n      if (value.length === 0) return \"[]\";\r\n      value[0] = strignifyRef(value[0], referenceValues);\r\n      let arrayValues = value.reduce(\r\n        (x1: any, x2: any) => `${x1}, ${strignifyRef(x2, referenceValues)}`\r\n      );\r\n      return `[${arrayValues}]`;\r\n    case \"set\":\r\n      let setValues: string[] = [];\r\n\r\n      value.forEach((value1: any, value2: any, set: Set<any>) => {\r\n        setValues.push(strignifyRef(value2, referenceValues));\r\n      });\r\n\r\n      if (setValues.length === 0) return \"new Set()\";\r\n\r\n      return `new Set([${setValues.join(\", \")}])`;\r\n    case \"map\":\r\n      let mapValues: string[] = [];\r\n\r\n      value.forEach((indexValue: any, key: any) => {\r\n        mapValues.push(\r\n          `[${strignifyRef(key, referenceValues)}, ${strignifyRef(\r\n            indexValue,\r\n            referenceValues\r\n          )}]`\r\n        );\r\n      });\r\n\r\n      if (mapValues.length === 0) return \"new Map()\";\r\n\r\n      return `new Map([${mapValues.join(\", \")}])`;\r\n    case \"object\":\r\n      let objectValues = [];\r\n\r\n      for (let propertyName in value) {\r\n        if (value.hasOwnProperty(propertyName))\r\n          objectValues.push(\r\n            `${propertyName}: ${strignifyRef(\r\n              value[propertyName],\r\n              referenceValues\r\n            )}`\r\n          );\r\n      }\r\n\r\n      if (objectValues.length === 0) return \"{}\";\r\n\r\n      return `{\\n${objectValues.join(\",\\n\")}\\n}`;\r\n    case \"function\":\r\n      let functionName = value.name || \"anonymousFunction\";\r\n      let functionObject = \"\";\r\n      let functionPrototype = \"\";\r\n\r\n      for (let propertyName in value) {\r\n        if (value.hasOwnProperty(propertyName))\r\n          functionObject += `${functionName}.${propertyName} = ${strignifyRef(\r\n            value[propertyName],\r\n            referenceValues\r\n          )};\\n`;\r\n      }\r\n\r\n      for (let propertyName in value.prototype) {\r\n        if (value.prototype.hasOwnProperty(propertyName))\r\n          functionObject += `${functionName}.prototype.${propertyName} = ${strignifyRef(\r\n            value.prototype[propertyName],\r\n            referenceValues\r\n          )};\\n`;\r\n      }\r\n\r\n      if (!functionObject && !functionPrototype) {\r\n        return String(value);\r\n      }\r\n      return `(function(){\\n var ${functionName} = ${String(\r\n        value\r\n      )};\\n ${functionObject}\\n ${functionPrototype}\\n return ${functionName};\\n}())`;\r\n    default:\r\n      return JSON.stringify(value);\r\n  }\r\n}\r\n\r\n/**\r\n * Stringify the value, if it wasn't before\r\n * @param value the value, that converts to string\r\n * @param references the references to stringified objects\r\n */\r\nfunction strignifyRef(value: any, references: any[]): string {\r\n  switch (getObjectType(value)) {\r\n    case \"array\":\r\n    case \"object\":\r\n    case \"map\":\r\n    case \"set\":\r\n    case \"function\":\r\n      if (references.indexOf(value) < 0) {\r\n        let referencesLength = references.length;\r\n        references.push(value);\r\n        let refString = stringify(value, references);\r\n        references.splice(referencesLength);\r\n        return refString;\r\n      }\r\n      return \"null\";\r\n    default:\r\n      return stringify(value);\r\n  }\r\n}\r\n\r\n/**\r\n * Converts JavaScript value to string\r\n * @param value the value of any type\r\n */\r\nfunction javaScriptToString(value: any): string {\r\n  return stringify(value);\r\n}\r\n\r\nexport default javaScriptToString;\r\n","import stringify from 'javascripttostring';\r\n\r\nexport interface IModuleValue {\r\n  name: string;\r\n  exports: any;\r\n}\r\n\r\nfunction asUmdModule(...values: IModuleValue[]): string {\r\n  let moduleBody = \"\";\r\n\r\n  for (let mv of values) {\r\n      moduleBody += `exports.${mv.name} = ${stringify(mv.exports)}`\r\n  }\r\n\r\n  return `(function (global, factory) {\r\n        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n        typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n        (global = global || self, factory(global));\r\n    }(this, function (exports) { 'use strict';\r\n        ${moduleBody}\r\n        Object.defineProperty(exports, '__esModule', { value: true });\r\n    }));`;\r\n}\r\n\r\nexport default asUmdModule;\r\n"],"names":["getObjectType","stringify"],"mappings":"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"}